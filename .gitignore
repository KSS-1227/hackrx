# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
develop-eggs/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual Environment (Render creates its own)
venv/
env/
ENV/
env.bak/
venv.bak/

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Environment variables (keep .env.example for documentation)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Local database files
*.db
*.sqlite
*.sqlite3

# Node modules (if you add any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Temporary files
*.tmp
*.temp

# Testing
.pytest_cache/
.coverage
htmlcov/

# Local data directory contents (but keep structure)
data/vector_db/*
!data/vector_db/.gitkeep
data/uploads/*
!data/uploads/.gitkeep
data/cache/*
!data/cache/.gitkeep

# Logs (keep structure but not log files)
logs/*
!logs/.gitkeep
*.log

# Render specific
.render/

# Local development files
.env.development
.env.test

# Large model files (if any get downloaded locally)
models/*.bin
models/*.safetensors
models/*.pt
models/*.pth

# Backup files
*.bak
*.backup

# Coverage reports
.coverage.*
coverage.xml

# Jupyter Notebook checkpoints
.ipynb_checkpoints"venv/" 
"venv/" 
"__pycache__/" 
"*.pyc" 
